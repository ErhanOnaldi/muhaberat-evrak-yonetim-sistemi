@model IEnumerable<muhaberat_evrak_yonetim.Entities.CargoTrackingLog>

@{
    ViewData["Title"] = "Kargo Takip";
    var document = ViewBag.Document as muhaberat_evrak_yonetim.Entities.Document;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="fas fa-shipping-fast mr-2"></i>Kargo Takip
        </h1>
        <div>
            <a asp-action="Details" asp-route-id="@document?.Id" class="btn btn-info btn-sm mr-2">
                <i class="fas fa-eye mr-1"></i>Evrak Detayları
            </a>
            <a asp-action="Index" class="btn btn-secondary btn-sm">
                <i class="fas fa-arrow-left mr-1"></i>Evrak Listesi
            </a>
        </div>
    </div>

    <!-- Document and Cargo Info Card -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-file-alt mr-2"></i>Evrak ve Kargo Bilgileri
            </h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h6 class="text-primary mb-3">
                        <i class="fas fa-file mr-2"></i>Evrak Bilgileri
                    </h6>
                    <div class="mb-2">
                        <strong>Evrak No:</strong>
                        <span class="text-primary font-weight-bold">@document.DocumentNumber</span>
                    </div>
                    <div class="mb-2">
                        <strong>Başlık:</strong> @document.Title
                    </div>
                    <div class="mb-2">
                        <strong>Tür:</strong>
                        <span class="badge badge-info">@document.DocumentType?.TypeName</span>
                    </div>
                    <div class="mb-2">
                        <strong>Durum:</strong>
                        @{
                            var statusClass = document.Status switch
                            {
                                "DRAFT" => "badge-secondary",
                                "SENT" => "badge-primary",
                                "DELIVERED" => "badge-success",
                                "RECEIVED" => "badge-success",
                                "CANCELLED" => "badge-danger",
                                _ => "badge-secondary"
                            };
                        }
                        <span class="badge @statusClass">@document.Status</span>
                    </div>
                </div>
                <div class="col-md-6">
                    <h6 class="text-success mb-3">
                        <i class="fas fa-truck mr-2"></i>Kargo Bilgileri
                    </h6>
                    <div class="mb-2">
                        <strong>Kargo Şirketi:</strong>
                        @(document.CargoCompany ?? "Belirtilmemiş")
                    </div>
                    <div class="mb-2">
                        <strong>Takip Numarası:</strong>
                        @if (!string.IsNullOrEmpty(document.CargoTrackingNumber))
                        {
                            <span class="badge badge-secondary font-weight-bold">@document.CargoTrackingNumber</span>
                        }
                        else
                        {
                            <span class="text-muted">Henüz atanmamış</span>
                        }
                    </div>
                    <div class="mb-2">
                        <strong>Kargo Durumu:</strong>
                        @{
                            var deliveryStatusClass = document.DeliveryStatus switch
                            {
                                "PREPARING" => "badge-warning",
                                "SHIPPED" => "badge-info",
                                "IN_TRANSIT" => "badge-primary",
                                "DELIVERED" => "badge-success",
                                "RETURNED" => "badge-danger",
                                _ => "badge-secondary"
                            };
                        }
                        <span class="badge @deliveryStatusClass">@document.DeliveryStatus</span>
                    </div>
                    <div class="mb-2">
                        <strong>Kargoya Verilme:</strong>
                        @(document.ShippingDate?.ToString("dd.MM.yyyy HH:mm") ?? "Henüz verilmemiş")
                    </div>
                    <div class="mb-2">
                        <strong>Teslimat Tarihi:</strong>
                        @(document.DeliveryDate?.ToString("dd.MM.yyyy HH:mm") ?? "Henüz teslim edilmemiş")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cargo Status Progress -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-info">
                <i class="fas fa-route mr-2"></i>Kargo Durumu
            </h6>
        </div>
        <div class="card-body">
            <div class="progress-timeline">
                @{
                    var statuses = new List<(string status, string label, string icon)>
                    {
                        ("PREPARING", "Hazırlanıyor", "fas fa-clock"),
                        ("SHIPPED", "Kargoya Verildi", "fas fa-truck"),
                        ("IN_TRANSIT", "Yolda", "fas fa-shipping-fast"),
                        ("DELIVERED", "Teslim Edildi", "fas fa-check-circle")
                    };
                    
                    var currentStatusIndex = statuses.FindIndex(s => s.status == document.DeliveryStatus);
                    if (currentStatusIndex == -1) currentStatusIndex = 0;
                }

                <div class="row">
                    @for (int i = 0; i < statuses.Count; i++)
                    {
                        var status = statuses[i];
                        var isActive = i <= currentStatusIndex;
                        var isCurrent = i == currentStatusIndex;
                        
                        <div class="col-md-3">
                            <div class="text-center">
                                <div class="progress-step @(isActive ? "active" : "") @(isCurrent ? "current" : "")">
                                    <div class="progress-step-icon">
                                        <i class="@status.icon"></i>
                                    </div>
                                </div>
                                <h6 class="mt-2 @(isCurrent ? "text-success" : (isActive ? "text-primary" : "text-danger"))">
                                    @status.label
                                </h6>
                                @if (isCurrent)
                                {
                                    <small class="text-success font-weight-bold">
                                        <i class="fas fa-map-marker-alt mr-1"></i>Mevcut Durum
                                    </small>
                                }
                            </div>
                        </div>
                    }
                </div>
                
                @if (document.DeliveryStatus == "RETURNED")
                {
                    <div class="alert alert-warning mt-3">
                        <i class="fas fa-exclamation-triangle mr-2"></i>
                        <strong>Dikkat:</strong> Bu kargo iade edilmiştir.
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Cargo Tracking Log -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-success">
                <i class="fas fa-list mr-2"></i>Kargo Takip Geçmişi (@Model.Count() kayıt)
            </h6>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead class="thead-light">
                            <tr>
                                <th>Tarih</th>
                                <th>Eski Durum</th>
                                <th>Yeni Durum</th>
                                <th>Konum</th>
                                <th>Güncelleyen</th>
                                <th>Notlar</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var log in Model)
                            {
                                <tr>
                                    <td>
                                        <strong>@log.StatusChangeDate.ToString("dd.MM.yyyy")</strong>
                                        <br><small class="text-muted">@log.StatusChangeDate.ToString("HH:mm")</small>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(log.OldStatus))
                                        {
                                            var oldStatusClass = log.OldStatus switch
                                            {
                                                "PREPARING" => "badge-warning",
                                                "SHIPPED" => "badge-info",
                                                "IN_TRANSIT" => "badge-primary",
                                                "DELIVERED" => "badge-success",
                                                "RETURNED" => "badge-danger",
                                                _ => "badge-secondary"
                                            };
                                            <span class="badge @oldStatusClass">@log.OldStatus</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            var newStatusClass = log.NewStatus switch
                                            {
                                                "PREPARING" => "badge-warning",
                                                "SHIPPED" => "badge-info",
                                                "IN_TRANSIT" => "badge-primary",
                                                "DELIVERED" => "badge-success",
                                                "RETURNED" => "badge-danger",
                                                _ => "badge-secondary"
                                            };
                                        }
                                        <span class="badge @newStatusClass">@log.NewStatus</span>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(log.Location))
                                        {
                                            <i class="fas fa-map-marker-alt text-danger mr-1"></i>@log.Location
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @if (log.UpdatedByUser != null)
                                        {
                                            <strong>@log.UpdatedByUser.FirstName @log.UpdatedByUser.LastName</strong>
                                            <br><small class="text-muted">@log.UpdatedByUser.Email</small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Sistem</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(log.Notes))
                                        {
                                            <span class="text-muted">@log.Notes</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-shipping-fast fa-3x text-gray-300 mb-3"></i>
                    <h5 class="text-gray-600">Kargo Takip Bilgisi Yok</h5>
                    <p class="text-muted">Bu evrak için henüz kargo takip kaydı bulunmuyor.</p>
                </div>
            }
        </div>
    </div>

    <!-- Addresses Information -->
    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-warning">
                        <i class="fas fa-shipping-fast mr-2"></i>Gönderim Adresi
                    </h6>
                </div>
                <div class="card-body">
                    <p class="mb-0">@document.ShippingAddress</p>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-success">
                        <i class="fas fa-home mr-2"></i>Teslimat Adresi
                    </h6>
                </div>
                <div class="card-body">
                    <p class="mb-0">@document.DeliveryAddress</p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .progress-timeline {
        padding: 20px 0;
    }

    .progress-step {
        position: relative;
        margin-bottom: 10px;
    }

    .progress-step-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background: #e9ecef;
        color: #6c757d;
        font-size: 20px;
        border: 3px solid #e9ecef;
        transition: all 0.3s ease;
    }

    .progress-step.active .progress-step-icon {
        background: #4e73df;
        color: white;
        border-color: #4e73df;
        transform: scale(1.1);
    }

    .progress-step.current .progress-step-icon {
        background: #1cc88a;
        color: white;
        border-color: #1cc88a;
        animation: pulse 2s infinite;
        box-shadow: 0 0 0 10px rgba(28, 200, 138, 0.1);
        transform: scale(1.1);
    }

    .progress-step:not(.active):not(.current) .progress-step-icon {
        background: #dc3545;
        color: white;
        border-color: #dc3545;
    }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(28, 200, 138, 0.4);
        }
        70% {
            box-shadow: 0 0 0 10px rgba(28, 200, 138, 0);
        }
        100% {
            box-shadow: 0 0 0 0 rgba(28, 200, 138, 0);
        }
    }

    @@media (max-width: 768px) {
        .progress-timeline .col-md-3 {
            margin-bottom: 20px;
        }
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-refresh every 30 seconds if cargo is in transit
            @if (document.DeliveryStatus == "SHIPPED" || document.DeliveryStatus == "IN_TRANSIT")
            {
                <text>
                setInterval(function() {
                    location.reload();
                }, 30000);
                </text>
            }

            // Smooth scroll to current status
            if ($('.progress-step.current').length > 0) {
                setTimeout(function() {
                    $('html, body').animate({
                        scrollTop: $('.progress-step.current').offset().top - 200
                    }, 1000);
                }, 500);
            }
        });
    </script>
}